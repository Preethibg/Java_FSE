Exercise 1: Configuring a Basic Spring Application
Scenario: 
Your company is developing a web application for managing a library. You need to use the Spring Framework to handle the backend operations.




<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.library</groupId>
    <artifactId>LibraryManagement</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring.version>6.1.10</spring.version> <!-- Using a recent stable Spring 6 version -->
    </properties>

    <dependencies>
        <!-- Spring Core Dependency -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>

Output:
Loading Spring application context...
BookRepository bean initialized.
BookService bean initialized.
BookRepository set in BookService.

Spring context loaded successfully.

BookService bean retrieved.
BookService: Getting all books.
Fetching all books from the repository...
Books available: [The Great Gatsby]

Application finished.



Steps:
1.Project Structure Creation: You manually created the necessary directory structure for a Maven project on your local machine, including src/main/java/com/library/repository, src/main/java/com/library/service, and src/main/resources.

2.File Creation and Population: You created five specific files (pom.xml, applicationContext.xml, BookRepository.java, BookService.java, and Main.java) and populated them with the provided Java and XML code, placing each file in its correct directory within the LibraryManagement project.

4.Maven Build: You opened a terminal, navigated to your LibraryManagement project directory, and executed the Maven command mvn clean install to compile your code and download the required Spring dependencies.

5.Application Execution: You then ran your Spring application using the Maven command mvn exec:java -Dexec.mainClass="com.library.Main" to see the output generated by your Main class, confirming the Spring context and bean wiring were correct.
