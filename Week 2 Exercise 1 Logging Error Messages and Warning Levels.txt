Exercise 1: Logging Error Messages and Warning Levels 
Task: Write a Java application that demonstrates logging error messages and warning levels 
using SLF4J.



// Main.java (Using Java's built-in logging for simple online execution)

import java.util.logging.Logger;
import java.util.logging.Level;
import java.util.logging.ConsoleHandler;
import java.util.logging.SimpleFormatter;

public class Main { // Renamed to Main for common online compiler compatibility

    private static final Logger logger = Logger.getLogger(Main.class.getName());

    public static void main(String[] args) {
        System.out.println("--- Starting Logging Example (java.util.logging) ---");

        // Optional: Configure the logger to display all levels to the console
        // By default, ConsoleHandler might only show INFO and above.
        // This ensures WARNING and SEVERE (Error) are visible.
        ConsoleHandler handler = new ConsoleHandler();
        handler.setLevel(Level.ALL); // Set handler to process all levels
        handler.setFormatter(new SimpleFormatter() {
            @Override
            public String format(java.util.logging.LogRecord record) {
                // Custom simple format: Level: Message (SourceClass)
                return String.format("%s: %s (%s)%n",
                                     record.getLevel().getName(),
                                     record.getMessage(),
                                     record.getSourceClassName());
            }
        });

        // Remove default handlers to prevent duplicate output, then add our configured one
        logger.setUseParentHandlers(false); // Prevent logging to default console handler twice
        logger.addHandler(handler);
        logger.setLevel(Level.ALL); // Set logger to process all levels

        // Log messages at different levels
        // Equivalent to SLF4J's trace/debug (often filtered out by default)
        logger.log(Level.FINEST, "This is a FINEST (trace-like) message.");
        logger.log(Level.FINE, "This is a FINE (debug-like) message.");
        logger.info("This is an INFO message.");   // General application progress

        // Log messages at warning and error levels as requested
        logger.warning("This is a WARNING message."); // Potentially problematic situations
        logger.severe("This is an ERROR message.");   // Serious problems (SEVERE is equivalent to ERROR in JUL)

        // Log an error with an exception
        try {
            int result = 10 / 0; // Simulate an error
        } catch (ArithmeticException e) {
            logger.log(Level.SEVERE, "An arithmetic error occurred!", e);
        }

        System.out.println("--- Logging Example Finished ---");
    }
}


Output:

--- Starting Logging Example (java.util.logging) ---
FINEST: This is a FINEST (trace-like) message. (Main)
FINE: This is a FINE (debug-like) message. (Main)
INFO: This is an INFO message. (Main)
WARNING: This is a WARNING message. (Main)
SEVERE: This is an ERROR message. (Main)
SEVERE: An arithmetic error occurred! (Main)
--- Logging Example Finished ---

=== Code Execution Successful ===