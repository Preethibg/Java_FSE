 
Scenario: 
You need to use different assertions in JUnit to validate your test results


import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertNotNull;
import org.junit.runner.JUnitCore;
import org.junit.runner.Result;
import org.junit.runner.notification.Failure;

public class AssertionsTest {
    @Test
    public void testAssertions() {
        // Assert equals
        assertEquals(5, 2 + 3); // 5 == 5, passes

        // Assert true
        assertTrue(5 > 3);     // 5 > 3 is true, passes

        // Assert false
        assertFalse(5 < 3);    // 5 < 3 is false, passes

        // Assert null
        assertNull(null);      // null is null, passes

        // Assert not null
        assertNotNull(new Object()); // a new object is not null, passes
    }

    // Main method to run tests in JDoodle
    public static void main(String[] args) {
        Result result = JUnitCore.runClasses(AssertionsTest.class);

        for (Failure failure : result.getFailures()) {
            System.out.println(failure.toString());
        }

        System.out.println("--------------------");
        System.out.println("Tests Run: " + result.getRunCount());
        System.out.println("Failures: " + result.getFailureCount());
        System.out.println("Ignored: " + result.getIgnoreCount());
        System.out.println("Success: " + (result.wasSuccessful() ? "YES" : "NO"));
    }
}


Output:

--------------------
Tests Run: 1
Failures: 0
Ignored: 0
Success: YES
